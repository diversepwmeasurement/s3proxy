env:
  dockerhub_publish: ${{ secrets.DOCKER_PASS != '' }}
jobs:
  Containerize:
    needs:
    - runTests
    - meta
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
    - continue-on-error: true
      uses: actions/download-artifact@v2
      with:
        name: s3proxy
        path: target
    - continue-on-error: true
      uses: actions/download-artifact@v2
      with:
        name: pom
        path: .
    - continue-on-error: true
      name: Set up QEMU
      uses: docker/setup-qemu-action@v2
    - continue-on-error: true
      name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    - continue-on-error: true
      if: github.event_name != 'pull_request' && env.dockerhub_publish == 'true'
      name: Login to DockerHub
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.DOCKER_PASS }}
        username: ${{ secrets.DOCKER_USER }}
    - continue-on-error: true
      if: github.event_name != 'pull_request'
      name: Login to GHCR
      uses: docker/login-action@v3
      with:
        password: ${{ secrets.GITHUB_TOKEN }}
        registry: ghcr.io
        username: ${{ github.actor }}
    - continue-on-error: true
      name: Build and push
      uses: docker/build-push-action@v5
      with:
        build-args: 'BUILDTIME=${{ needs.meta.outputs.container_buildtime }}

          VERSION=${{ needs.meta.outputs.container_version }}

          REVISION=${{ needs.meta.outputs.container_revision }}

          '
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: .
        labels: ${{ needs.meta.outputs.container_labels }}
        platforms: linux/amd64,linux/arm64,linux/arm/v7
        push: false
        tags: ${{ needs.meta.outputs.container_tags }}
  meta:
    outputs:
      container_buildtime: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.created']
        }}
      container_labels: ${{ steps.docker_action_meta.outputs.labels }}
      container_revision: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.revision']
        }}
      container_tags: ${{ steps.docker_action_meta.outputs.tags }}
      container_version: ${{ fromJSON(steps.docker_action_meta.outputs.json).labels['org.opencontainers.image.version']
        }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Checkout
      uses: actions/checkout@v4
      with:
        persist-credentials: false
        submodules: false
    - continue-on-error: true
      id: docker_action_meta
      name: Docker meta
      uses: docker/metadata-action@v4.0.1
      with:
        flavor: 'latest=false

          '
        images: 'name=ghcr.io/${{ github.repository }}/container

          name=andrewgaul/s3proxy,enable=${{ env.dockerhub_publish }}

          '
        labels: 'org.opencontainers.image.licenses=Apache-2.0

          '
        tags: 'type=sha,format=long

          type=sha

          type=match,pattern=s3proxy-(.*),group=1

          type=ref,event=branch

          type=ref,event=pr

          type=ref,event=tag

          '
  runTests:
    needs:
    - meta
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v4
      with:
        submodules: recursive
    - continue-on-error: true
      uses: actions/setup-java@v4
      with:
        cache: maven
        distribution: temurin
        java-version: '11'
    - continue-on-error: true
      uses: actions/setup-python@v4
      with:
        cache: pip
        python-version: '3.8'
    - continue-on-error: true
      name: Maven Set version
      run: 'mvn versions:set -DnewVersion=${{ needs.meta.outputs.version }}

        '
    - continue-on-error: true
      name: Maven Package
      run: 'mvn package verify -DskipTests

        '
    - continue-on-error: true
      name: Maven Test
      run: 'mvn test

        '
    - continue-on-error: true
      name: Other Test
      run: './src/test/resources/run-s3-tests.sh

        '
    - continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: s3proxy
        path: target/s3proxy
    - continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: pom
        path: pom.xml
name: Main CI
on:
  repository_dispatch:
    types: trigger-ga___ci-main.yml
